---
#workflow:
#  rules:
#    - if: '$CI_MERGE_REQUEST_ID && $CI_MERGE_REQUEST_TITLE !~ /^WIP/'   # Execute jobs in merge request context and not in WIP status
#    - if: $CI_COMMIT_BRANCH == 'master'      # Execute jobs when a new commit is pushed to master branch

variables:
  # remove some unused 3rd party packages to speed up tests.
  DUNECI_CMAKE_FLAGS: "-DCMAKE_DISABLE_FIND_PACKAGE_Alberta=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Vc=TRUE -DCMAKE_DISABLE_DOCUMENTATION=TRUE -DENABLE_HEADERCHECK=ON"
  
before_script:
  - duneci-install-module https://gitlab.dune-project.org/core/dune-common.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-geometry.git
  - duneci-install-module https://gitlab.dune-project.org/core/dune-grid.git


ubuntu:20.04-clang-10-17:
  image: registry.dune-project.org/docker/ci/ubuntu:20.04
  script: duneci-standard-test
  variables:
    DUNECI_TOOLCHAIN: clang-10-17
    # cmake flags we use for all dune moudle - important is that build shared libs is set (need some better way of doi
    DUNECI_CMAKE_FLAGS: $DUNE_CMAKE_FLAGS
  tags: [duneci]

debian:11--gcc-9-17-python:
  image: registry.dune-project.org/docker/ci/debian:11
  script: duneci-standard-test
  
  variables:
    DUNECI_TOOLCHAIN:   gcc-9-17
    # the CMAKE_FLAGS used to build the modules - set python bindings to on
    # Note: DUNE_RUNNING_IN_CI only needed unti ci image updating fixed on gitlab
    DUNE_CMAKE_FLAGS:   "-DDUNE_RUNNING_IN_CI=TRUE -DDUNE_ENABLE_PYTHONBINDINGS=ON -DCMAKE_DISABLE_FIND_PACKAGE_LATEX=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Alberta=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Vc=TRUE -DCMAKE_DISABLE_DOCUMENTATION=TRUE"
  tags: [duneci]

debian:11--gcc-9-17:headercheck:
  image: registry.dune-project.org/docker/ci/debian:11
  script:
    - duneci-install-module https://gitlab.dune-project.org/extensions/dune-alugrid.git
    - cd /duneci/modules/dune-alugrid/build-cmake
    - make headercheck
    - cd /duneci/modules/dune-alugrid/
    - pip install -i https://gitlab.dune-project.org/api/v4/projects/812/packages/pypi/simple --no-build-isolation wheel twine scikit-build
    - python3 /duneci/modules/dune-common/bin/dunepackaging.py --onlysdist
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload --repository-url https://gitlab.dune-project.org/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
  variables:
    DUNECI_TOOLCHAIN: gcc-9-17
  tags: [duneci]

debian:11--buildpackage:
  image: registry.dune-project.org/docker/ci/debian:11
  script:
    - duneci-install-module https://gitlab.dune-project.org/extensions/dune-alugrid.git
    - cd /duneci/modules/dune-alugrid/
    - pip install -i https://gitlab.dune-project.org/api/v4/projects/812/packages/pypi/simple --no-build-isolation wheel twine scikit-build
    - python3 /duneci/modules/dune-common/bin/dunepackaging.py --onlysdist
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python3 -m twine upload --repository-url https://gitlab.dune-project.org/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
  variables:
    DUNECI_TOOLCHAIN: gcc-9-17
  tags: [duneci]
